<%
String codeInsee;
Integer rayon;
String dateDebut;
String dateFin;
String rubrique;
String recherche;
String order;
String thematiquePerso;
String organisme;
String flux;
String excludeIds;

codeInsee = Util.getString(request.getAttribute("codeInsee"), null);
rayon = Util.toInteger(request.getAttribute("rayon"), null);
dateDebut = Util.getString(request.getAttribute("dateDebut"), null);
dateFin = Util.getString(request.getAttribute("dateFin"), null);
rubrique = Util.getString(request.getAttribute("rubrique"), null);
recherche = Util.getString(request.getAttribute("recherche"), null);
order = Util.getString(request.getAttribute("order"), null);
thematiquePerso = Util.getString(request.getAttribute("thematiquePerso"), null);
organisme = Util.getString(request.getAttribute("organisme"), null);
flux = Util.getString(request.getAttribute("flux"), null);
excludeIds = Util.getString(request.getAttribute("excludeIds"), null);

Map<String, Object> parameters = new HashMap<String, Object>();

if (Util.notEmpty(codeInsee)) {
    parameters.put("codeInsee", codeInsee);
}
if (Util.notEmpty(rayon)) {
    parameters.put("rayon", rayon);
}
if (Util.notEmpty(dateDebut)) {
    parameters.put("dateDebut", dateDebut);
}
if (Util.notEmpty(dateFin)) {
    parameters.put("dateFin", dateFin);
}
if (Util.notEmpty(rubrique)) {
    parameters.put("rubrique", rubrique);
}
if (Util.notEmpty(recherche)) {
    parameters.put("recherche", recherche);
}
if (Util.notEmpty(order)) {
    parameters.put("order", order);
}
if (Util.notEmpty(thematiquePerso)) {
    parameters.put("thematiquePerso", thematiquePerso);
}
if (Util.notEmpty(organisme)) {
    parameters.put("organisme", organisme);
}
if (Util.notEmpty(excludeIds)) {
    parameters.put("excludeIds", excludeIds);
}

String idFlux = Util.isEmpty(flux) ? channel.getProperty("jcmsplugin.socle.infolocale.flux.default") : flux;

JSONObject extractedFlux = RequestManager.filterFluxData(idFlux, parameters);


%>